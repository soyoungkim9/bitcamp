<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd"
        >
    
    <context:component-scan base-package="bitcamp.java106.pms"></context:component-scan>
    
    <bean id="sqlSessionFactory"
          class="org.mybatis.spring.SqlSessionFactoryBean">
	<property name="dataSource" ref="dataSource" />
	
	 <property name="mapperLocations"
	 	 value="classpath*:bitcamp/java106/pms/sql/*Mapper.xml" />

    <property name="typeAliasesPackage" value="bitcamp.java106.pms.domain"/>
    
    </bean>
	 
	<bean id="dataSource" 
		class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
	   <property name="driverClassName" value="${jdbc.driver}" />
	   <property name="url" value="${jdbc.url}" />
	   <property name="username" value="${jdbc.username}" />
	   <property name="password" value="${jdbc.password}" />
	</bean>
	
	<context:property-placeholder location="bitcamp/java106/pms/sql/jdbc.properties"/>

<!-- DAO 구현체를 자동으로 만들어주는 객체를 준비
		=> 개발자는 DAO를 직접 구현할 필요가 없다.
		=> 단지 인터페이스만 선언하면 된다.
 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	  <!-- DAO 인터페이스가 선언된 패키지를 지정한다. -->
	  <property name="basePackage" value="bitcamp.java106.pms.dao" />
	</bean>
</beans>






