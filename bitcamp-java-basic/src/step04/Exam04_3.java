// 비트 이동 연산자 : >>, >>>, << 
package step04;

public class Exam04_3 {
    public static void main(String[] args) {
        int i = 0b01101001; // 105
        System.out.println(i >>> 1); // 00110100 => 52
        System.out.println(i >>> 2); // 00011010 => 26
        System.out.println(i >>> 3); // 00001101 => 13
        System.out.println(i >>> 4);  // 00000110 => 6

     

        
        // 음수를 이동
        // - 0b11111111_11111111_11111111_10101001
        System.out.println(i);
        // 1_11111111_11111111_11111111_1010100
        System.out.println(i >>> 1); // -44
        // => 왼쪽 빈자리는 숫자의 부호비트로 채운다.
        //    음수니까 1로 채운다.
        // => 2로 나눈 후에 소수점이 있으면
        //    그 수보다 더 작은 정수값이 되는 결과가 나온다.

        // 11_11111111_11111111_11111111_101010
        System.out.println(i >>> 2);// -22

        // 111_11111111_11111111_11111111_10101
        System.out.println(i >>> 3); //-11
        
       // 1111_11111111_11111111_11111111_1010
        System.out.println(i >>> 4);  // -6
    
    }
}

// 오른쪽 이동
// - 1비트 이동은 나누기 2한 것과 같은 효과를 준다.
// - 소수점 이하는 짤리는 효과를 갖는다.
